# SPDX-License-Identifier: MIT
---
- name: Assume managing timesync if timesource is set
  set_fact:
    ad_integration_manage_timesync: true
  when:
    - ad_integration_timesync_source is not none
    - ad_integration_timesync_source | length > 0

- name: Ensure time source is provided if managing timesync
  fail:
    msg: >-
      ad_integration_timesync_source must be provided if
      manage timesync is true
  when:
    - ad_integration_manage_timesync | bool
    - ad_integration_timesync_source is none

- name: Set platform/version specific variables
  include_tasks: tasks/set_vars.yml

- name: Ensure required packages are installed
  package:
    name: "{{ __ad_integration_packages }}"
    state: present

- name: Ensure required services are enabled and started
  service:
    name: "{{ item }}"
    state: started
    enabled: yes
  loop: "{{ __ad_integration_services }}"

- name: Generate /etc/{{ __ad_integration_realmd_config }}
  template:
    src: "{{ __ad_integration_realmd_config }}.j2"
    dest: /etc/{{ __ad_integration_realmd_config }}
    backup: yes
    mode: 0400
  notify: ad_integration handler to restart services

- name: Flush handlers
  meta: flush_handlers

## Execute other roles if applicable
- name: Manage timesync
  include_role:
   name: fedora.linux_system_roles.timesync
  vars:
    timesync_ntp_servers:
      - hostname: "{{ ad_integration_timesync_source }}"
        iburst: yes
  when: ad_integration_manage_timesync | bool

- name: Join to a specific Domain Controller
  shell: |
    set -euo pipefail
    echo {{ ad_integration_password | quote }} | realm join -U \
      {{ ad_integration_user | quote }} --membership-software \
      {{ ad_integration_membership_software | quote }} \
      {{ ad_integration_join_to_dc | quote }}
  when:
    - ad_integration_join_to_dc is not none
    - not ansible_check_mode
  register: __realm_join_output
  failed_when:
    - __realm_join_output is failed
    - not __realm_join_output.stderr is search("Already joined to this domain")
  changed_when: not __realm_join_output.stderr is search("Already joined to this domain")

- name: Perform discovery-based realm join operation
  shell: |
    set -euo pipefail
    echo {{ ad_integration_password | quote }} | realm join -U \
      {{ ad_integration_user | quote }} --membership-software \
      {{ ad_integration_membership_software | quote }} \
      {{ ad_integration_realm | quote }}
  when:
    - ad_integration_join_to_dc is none
    - not ansible_check_mode
  register: __realm_join_output
  failed_when:
    - __realm_join_output is failed
    - not __realm_join_output.stderr is search("Already joined to this domain")
  changed_when: not __realm_join_output.stderr is search("Already joined to this domain")
